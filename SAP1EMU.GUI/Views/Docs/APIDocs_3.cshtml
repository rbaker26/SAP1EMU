@{
    ViewData["Title"] = "API";
}

<script src="/js/CodeMirror/lib/codemirror.js"></script>
<script src="/js/CodeMirror/mode/python/python.js" type="text/javascript"></script>
<script src="/js/CodeMirror/mode/clike/clike.js" type="text/javascript"></script>
<script src="/js/CodeMirror/mode/javascript/javascript.js" type="text/javascript"></script>
<link href="/js/CodeMirror/lib/codemirror.css" rel="stylesheet" type="text/css" />
<script src="/js/Views/Docs/APIDocs_3.js" type="text/javascript"></script>

@* This is to autosize the CodeBoxes *@
<style>
    .CodeMirror {
        border: 1px solid #eee;
        height: auto;
    }

    .CodeMirror-scroll {
        overflow-y: hidden;
        overflow-x: auto;
    }
</style>

<h1>SAP1Emu API</h1>
<p class="lead">
    How to Integrate with our API
</p>
<p>
    This learning module will go over how to integrate your app to our API using common languages.
</p>

@{ await Html.RenderPartialAsync("_APIDocs_TOC"); }


<h2>Supported Sets</h2>
<p>
    The SAP1Emu Emulator supports three different instruction sets for the SAP1. These SetNames must be passed along with the Code for the
    Emulator or Parser to correctly process the said Code. There is an API call you can make to retrieve the SetNames at
    <span class="text-muted">GET: /api/Assembler/supported_sets</span>. This GET call will return the SetNames as a list of strings.
    For more detailed information about this call, please visit the <a href="/swagger/" target="_blank">Swagger Page</a>
    <br /><br />
    Below are some code examples for calling this API Function in a couple of common languages and frameworks.
</p>
<div class="card">
    <div class="card-header">
        <h4 class="mb-4">GET: /api/Assembler/supported_sets</h4>
        <ul class="nav nav-tabs card-header-tabs" id="docTabs">
            <li class="nav-item">
                <a data-toggle="tab" class="nav-link active" href="">.NET Core</a>
            </li>
            <li class="nav-item">
                <a data-toggle="tab" class="nav-link" href="">Java <span class="badge badge-pill badge-secondary">Comming Soon</span></a>
            </li>
            <li class="nav-item">
                <a data-toggle="tab" class="nav-link" href="">Python3 <span class="badge badge-pill badge-secondary">Comming Soon</span></a>
            </li>
        </ul>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-auto">
                <h6>Code</h6>
                @Html.TextArea("API_P3_ISets", null, new { rows = "20", cols = "80", @class = "codebox", id = "API_P3_ISets" })
            </div>
            <div class="col">
                <h6>JSON Response</h6>
                @Html.TextArea("API_P3_ISets_Response", null, new { rows = "20", cols = "80", @class = "codebox", id = "API_P3_ISets_Response" })
            </div>
        </div>
    </div>
</div>

<br /><br />

<h2>Assembler</h2>
<p>
    In addidtion to providing emulation support, the SAP1Emu API also exposes the Parsing Engine through the Assembler API Call.
    This will allow the user to submit SAP1Emu Assembly and will return the associated binary.
    <br />
    <br />
    In order to parse correctly, the <code>requestBody</code> JSON must be escaped properly when assigning it directly to a string.
    If you are using <code>System.Text.Json</code> to create the <code>requestBody</code>, this will be handled automatically.
</p>
<div class="card">
    <div class="card-header">
        <h4 class="mb-4">POST: /api/Assembler</h4>
        <ul class="nav nav-tabs card-header-tabs" id="docTabs">
            <li class="nav-item">
                <a data-toggle="tab" class="nav-link active" href="">.NET Core</a>
            </li>
            <li class="nav-item">
                <a data-toggle="tab" class="nav-link" href="">Java <span class="badge badge-pill badge-secondary">Comming Soon</span></a>
            </li>
            <li class="nav-item">
                <a data-toggle="tab" class="nav-link" href="">Python3 <span class="badge badge-pill badge-secondary">Comming Soon</span></a>
            </li>
        </ul>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col">
                <h6>Code</h6>
                @Html.TextArea("API_P3_POST_ASSEMBLE", null, new { rows = "20", cols = "80", @class = "codebox", id = "API_P3_POST_ASSEMBLE" })
            </div>
        </div>
        <div class="row mt-3">
            <div class="col">
                <h6>Request Body</h6>
                @Html.TextArea("API_P3_POST_Body", null, new { rows = "20", cols = "80", @class = "codebox", id = "API_P3_POST_Body" })
            </div>
            <div class="col">
                <h6>JSON Response</h6>
                @Html.TextArea("API_P3_POST_ASSEMBLE_Response", null, new { rows = "20", cols = "80", @class = "codebox", id = "API_P3_POST_ASSEMBLE_Response" })
            </div>
        </div>
    </div>
</div>


<div class="mt-5">
    @{ await Html.RenderPartialAsync("_PageNavHelper", new PageNavHelperModel
        {
            ControllerName = "Docs",
            PreviousView = "APIDocs_2",
            PreviousViewDisplay = "Swagger / OpenAPI Support",
            NextView = "APIDocs_4",
            NextViewDisplay = "Emulator API"
        }
            );
    }
</div>